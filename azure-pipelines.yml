# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
      - main

variables:
  azureServiceConnection: 'github.com_vivek2662'
  devResourceGroup: 'ADF_DEV_TEST_1'
  devAutomationAccount: 'Venkat-AZ-Test-runbook'
  #preprodResourceGroup: ''
  #preprodAutomationAccount: ''
  runbookName: 'Automation_runbook_test_1.ps1'
  #runbookFolder: 'Runbooks'
  #artifactName: 'runbookArtifact'
  location: 'East US'
  #devRunbookName: 'runbook_dev'
  #preprodRunbookName: 'runbook_pre_prod'

  #Build stages:
stages:
  - stage: Build
    displayName: 'Building Runbook'
    jobs:
      - job: BuildRunbook
        displayName: 'Creating artifact'
        pool:
          vmImage: 'windows-latest'
        steps:
          - task: CopyFiles@2
            inputs:
              SourceFolder: '$(Build.SourcesDirectory)'
              Contents: '$(runbookName)'
              TargetFolder: '$(Build.ArtifactStagingDirectory)'
          - task: PublishBuildArtifacts@1
            displayName: 'Publish Build artifact'
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'drop'
              publishLocation: 'Container'
  - stage: dev
    displayName: 'Deploy to dev Environment'
    dependsOn: Build
    jobs:
      - job: DeployDev
        displayName: 'Deploying to Dev'
        pool:
          vmImage: 'windows-latest'
        steps:
          - download: current
            artifact: drop
          - task: AzureCLI@2
            displayName: 'importing dev runbook'
            inputs:
              azureSubscription: 'CICD_Runbook_devops'
              scriptType: 'ps'
              scriptLocation: 'scriptPath'
              scriptPath: '$(Pipeline.Worspace)/drop/$(runbookName)'

