parameters:
- name: RunbookName
  type: string
#- name: RunbookFolder
#  type: string
- name: ArtifactName
  type: string
#- name: TargetEnvironment
 # type: string #example dev,pre-prod,prod to add after runbook_name

steps:
  - checkout: self
    displayName: "Checkout Source Code"

# Validataing the runbook using the poweshell script
  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: |
        # Install PSScriptAnalyzer if not already installed
              if (-not (Get-Module -ListAvailable -Name PSScriptAnalyzer)) {
                Install-Module -Name PSScriptAnalyzer -Scope CurrentUser -Force -ErrorAction Stop
              }
        
              # Define the runbook path
              $filePath = "$(Build.SourcesDirectory)/${{ parameters.RunbookName }}"
        
              Write-Host "Validating file: $filePath"
        
              # Run the analyzer
              $results = Invoke-ScriptAnalyzer -Path $filePath -Recurse -Severity Warning, Error
        
              if ($results.Count -gt 0) {
                Write-Warning "PSScriptAnalyzer found issues:"
                $results | Format-Table -AutoSize
                throw "Runbook validation failed. Fix the above issues to proceed."
              } else {
                Write-Host "Runbook validation passed. No issues found."
              }
  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)'
      Contents: '**' # we need to try with runbook name or else it will take all files anything is fine
      TargetFolder: '$(Build.ArtifactStagingDirectory)'

  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: '$(Pipeline.Workspace)' # need to check for the pipeline workspace or the artifact staging directory
      artifact: '${{ parameters.ArtifactName }}'
      publishLocation: 'pipeline'

